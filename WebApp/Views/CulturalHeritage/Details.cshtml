@model WebApp.ViewModels.CulturalHeritageDetailsViewModel

<div class="container mt-5">
    <h1 class="text-center mb-4 text-primary">@Model.Name</h1>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h4 class="card-title">Details</h4>
            <p class="card-text"><strong>Description:</strong> @Model.Description</p>
            <p class="card-text"><strong>Location:</strong> @Model.Location</p>
            <p class="card-text"><strong>National Minority:</strong> @Model.NationalMinorityName</p>
        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h4 class="card-title">Themes</h4>
            @if (Model.Themes != null && Model.Themes.Any())
            {
                <ul class="list-group list-group-flush">
                    @foreach (var theme in Model.Themes)
                    {
                        <li class="list-group-item">
                            <h5 class="mb-1 text-secondary">@theme.Name</h5>
                            <p class="mb-0">@theme.Description</p> <!-- Description in its own paragraph -->
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted">No themes available for this cultural heritage.</p>
            }
        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h4 class="card-title">Comments</h4>
            @if (Model.Comments != null && Model.Comments.Any())
            {
                <ul class="list-group list-group-flush">
                    @foreach (var comment in Model.Comments)
                    {
                        <li class="list-group-item">
                            <p class="mb-1"><strong>User @comment.UserID:</strong> @comment.Content</p>
                            <small class="text-muted">@comment.CreatedAt.ToString("g")</small>
                            @if (ViewBag.UserID == comment.UserID)
                            {
                                <form method="post" asp-action="DeleteComment" asp-route-id="@comment.CommentID" asp-route-heritageId="@Model.HeritageID" class="mt-1">
                                    <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                </form>
                            }
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted">No comments available for this cultural heritage.</p>
            }

            <!-- Leave a Comment -->
            <h5 class="mt-4">Leave a Comment</h5>
            <form id="commentForm" class="mt-3">
                <input type="hidden" id="heritageId" value="@Model.HeritageID" />
                <div class="mb-3">
                    <textarea id="commentContent" class="form-control" rows="4" placeholder="Write your comment here..." required></textarea>
                </div>
                <button type="button" onclick="submitComment()" class="btn btn-primary">Add Comment</button>
            </form>
        </div>
    </div>

    <!-- Navigation Buttons -->
    <nav class="mt-4 text-center">
        <a href="/CulturalHeritage/UserIndex" class="btn btn-secondary">Back to Cultural Heritage</a>
        <a href="@Url.Action("UserDashboard", "Dashboard")" class="btn btn-primary">Back to User Dashboard</a>
    </nav>
</div>

<script>
    async function submitComment() {
        const heritageId = document.getElementById("heritageId").value;
        const content = document.getElementById("commentContent").value;

        if (!content.trim()) {
            alert("Comment content cannot be empty.");
            return;
        }

        const payload = {
            heritageId: heritageId,
            content: content
        };

        try {
            const response = await fetch('/api/Comment', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                },
                body: JSON.stringify(payload)
            });

            if (response.ok) {
                window.location.reload();
            } else {
                const result = await response.json();
                alert(`Error: ${result.message || "Failed to add comment"}`);
            }
        } catch (error) {
            console.error("Error submitting comment:", error);
            alert("An unexpected error occurred.");
        }
    }
</script>
